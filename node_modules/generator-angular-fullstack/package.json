{
  "name": "generator-angular-fullstack",
  "version": "3.0.0-rc7-patch.0",
  "description": "Yeoman generator for creating MEAN stack applications, using MongoDB, Express, AngularJS, and Node",
  "keywords": [
    "yeoman-generator",
    "mean",
    "mongodb",
    "angularjs",
    "express",
    "scaffold",
    "fullstack",
    "framework",
    "component",
    "front-end",
    "app"
  ],
  "homepage": "https://github.com/DaftMonk/generator-angular-fullstack",
  "bugs": {
    "url": "https://github.com/DaftMonk/generator-angular-fullstack/issues"
  },
  "author": {
    "name": "Tyler Henkel",
    "url": "http://tylerhenkel.com/"
  },
  "contributors": [
    {
      "name": "Andrew Koroluk",
      "email": "koroluka@gmail.com",
      "url": "http://andrewk.me/"
    },
    {
      "name": "Cody Mize",
      "email": "me@codymize.com",
      "url": "http://codymize.com/"
    },
    {
      "name": "Brian Ford",
      "email": "btford@umich.edu",
      "url": "http://briantford.com/"
    },
    {
      "name": "Pascal Hartig",
      "email": "passy@twitter.com",
      "url": "http://passy.me/"
    },
    {
      "name": "Eddie Monge",
      "url": "http://eddiemonge.com"
    },
    {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "https://twitter.com/sindresorhus"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/DaftMonk/generator-angular-fullstack.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "babel-core": "^5.8.23",
    "chalk": "^1.1.0",
    "generator-ng-component": "~0.1.1",
    "glob": "^5.0.14",
    "lodash": "^3.10.1",
    "underscore.string": "^3.1.1",
    "yeoman-generator": "~0.19.2",
    "yeoman-welcome": "^1.0.1"
  },
  "devDependencies": {
    "chai": "^3.2.0",
    "grunt": "~0.4.1",
    "grunt-build-control": "^0.5.0",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-jshint": "^0.11.2",
    "grunt-conventional-changelog": "~1.0.0",
    "grunt-david": "~0.5.0",
    "grunt-env": "^0.4.1",
    "grunt-mocha-test": "^0.12.7",
    "grunt-release": "^0.13.0",
    "jit-grunt": "^0.9.1",
    "mocha": "^2.2.5",
    "q": "^1.0.1",
    "recursive-readdir": "^1.2.0",
    "shelljs": "^0.5.3",
    "yeoman-assert": "^2.0.0"
  },
  "engines": {
    "node": ">=0.12.0",
    "npm": ">=1.2.10"
  },
  "license": "BSD-2-Clause",
  "readme": "# AngularJS Full-Stack generator\n[![Build Status](https://travis-ci.org/DaftMonk/generator-angular-fullstack.svg?branch=master)](http://travis-ci.org/DaftMonk/generator-angular-fullstack)\n[![npm version](https://badge.fury.io/js/generator-angular-fullstack.svg)](http://badge.fury.io/js/generator-angular-fullstack)\n[![Dependency Status](https://david-dm.org/daftmonk/generator-angular-fullstack.svg)](https://david-dm.org/daftmonk/generator-angular-fullstack)\n[![Dev-Dependency Status](https://david-dm.org/daftmonk/generator-angular-fullstack/dev-status.svg)](https://david-dm.org/daftmonk/generator-angular-fullstack#info=devDependencies)\n[![Gitter chat](https://badges.gitter.im/DaftMonk/generator-angular-fullstack.svg)](https://gitter.im/DaftMonk/generator-angular-fullstack)\n#### Generated project: \n[![Dependency Status](https://david-dm.org/angular-fullstack/angular-fullstack-deps.svg)](https://david-dm.org/angular-fullstack/angular-fullstack-deps)\n[![Dev-Dependency Status](https://david-dm.org/angular-fullstack/angular-fullstack-deps/dev-status.svg)](https://david-dm.org/angular-fullstack/angular-fullstack-deps#info=devDependencies)\n> Yeoman generator for creating MEAN stack applications, using MongoDB, Express, AngularJS, and Node - lets you quickly set up a project following best practices.\n\n## Example project\n\nGenerated with defaults: http://fullstack-demo.herokuapp.com/.\n\nSource code: https://github.com/DaftMonk/fullstack-demo\n\n## Usage\n\nInstall `yo`, `grunt-cli`, `bower`, and `generator-angular-fullstack`:\n```\nnpm install -g yo grunt-cli bower generator-angular-fullstack\n```\n\nMake a new directory, and `cd` into it:\n```\nmkdir my-new-project && cd $_\n```\n\nRun `yo angular-fullstack`, optionally passing an app name:\n```\nyo angular-fullstack [app-name]\n```\n\nRun `grunt` for building, `grunt serve` for preview, and `grunt serve:dist` for a preview of the built app.\n\n## Prerequisites\n\n* MongoDB - Download and Install [MongoDB](http://www.mongodb.org/downloads) - If you plan on scaffolding your project with mongoose, you'll need mongoDB to be installed and have the `mongod` process running.\n\n## Supported Configurations\n\n**Client**\n\n* Scripts: `JavaScript`, `CoffeeScript`, `Babel`\n* Markup:  `HTML`, `Jade`\n* Stylesheets: `CSS`, `Stylus`, `Sass`, `Less`,\n* Angular Routers: `ngRoute`, `ui-router`\n\n**Server**\n\n* Database: `None`, `MongoDB`\n* Authentication boilerplate: `Yes`, `No`\n* oAuth integrations: `Facebook` `Twitter` `Google`\n* Socket.io integration: `Yes`, `No`\n\n## Injection\n\nA grunt task looks for new files in your `client/app` and `client/components` folder and automatically injects them in the appropriate places based on an injection block.\n\n* `less` files into `client/app.less`\n* `scss` files into `client/app.scss`\n* `stylus` files into `client/app.styl`\n* `css` files into `client/index.html`\n* `js` files into `client/index.html`\n* `coffeescript` temp `js` files into `client/index.html`\n* `babel` temp `js` files into `client/index.html`\n\n## Generators\n\nAvailable generators:\n\n* App\n    - [angular-fullstack](#app) (aka [angular-fullstack:app](#app))\n* Server Side\n    - [angular-fullstack:endpoint](#endpoint)\n* Client Side\n    - [angular-fullstack:route](#route)\n    - [angular-fullstack:controller](#controller)\n    - [angular-fullstack:filter](#filter)\n    - [angular-fullstack:directive](#directive)\n    - [angular-fullstack:service](#service)\n    - [angular-fullstack:provider](#service)\n    - [angular-fullstack:factory](#service)\n    - [angular-fullstack:decorator](#decorator)\n* Deployment\n    - [angular-fullstack:openshift](#openshift)\n    - [angular-fullstack:heroku](#heroku)\n\n### App\nSets up a new AngularJS + Express app, generating all the boilerplate you need to get started.\n\nUsage:\n```bash\nUsage:\n  yo angular-fullstack:app [options] [<name>]\n\nOptions:\n  -h,   --help          # Print the generator's options and usage\n        --skip-cache    # Do not remember prompt answers                        Default: false\n        --skip-install  # Do not install dependencies                           Default: false\n        --app-suffix    # Allow a custom suffix to be added to the module name  Default: App\n\nArguments:\n  name    Type: String  Required: false\n```\n\nExample:\n```bash\nyo angular-fullstack\n```\n\n### Endpoint\nGenerates a new API endpoint.\n\nUsage:\n```bash\nUsage:\n  yo angular-fullstack:endpoint [options] <name>\n\nOptions:\n  -h,   --help               # Print the generator's options and usage\n        --skip-cache         # Do not remember prompt answers           Default: false\n        --route              # URL for the endpoint\n        --models             # Specify which model(s) to use\n        --endpointDirectory  # Parent directory for enpoints\n\nArguments:\n  name    Type: String  Required: true\n```\n\nExample:\n```bash\nyo angular-fullstack:endpoint message\n[?] What will the url of your endpoint be? /api/messages\n```\n\nProduces:\n\n    server/api/message/index.js\n    server/api/message/message.spec.js\n    server/api/message/message.controller.js\n    server/api/message/message.model.js  (optional)\n    server/api/message/message.socket.js (optional)\n\n### Route\nGenerates a new route.\n\nExample:\n```bash\nyo angular-fullstack:route myroute\n[?] Where would you like to create this route? client/app/\n[?] What will the url of your route be? /myroute\n```\n\nProduces:\n\n    client/app/myroute/myroute.js\n    client/app/myroute/myroute.controller.js\n    client/app/myroute/myroute.controller.spec.js\n    client/app/myroute/myroute.html\n    client/app/myroute/myroute.scss\n\n\n### Controller\nGenerates a controller.\n\nExample:\n```bash\nyo angular-fullstack:controller user\n[?] Where would you like to create this controller? client/app/\n```\n\nProduces:\n\n    client/app/user/user.controller.js\n    client/app/user/user.controller.spec.js\n\n### Directive\nGenerates a directive.\n\nExample:\n```bash\nyo angular-fullstack:directive myDirective\n[?] Where would you like to create this directive? client/app/\n[?] Does this directive need an external html file? Yes\n```\n\nProduces:\n\n    client/app/myDirective/myDirective.directive.js\n    client/app/myDirective/myDirective.directive.spec.js\n    client/app/myDirective/myDirective.html\n    client/app/myDirective/myDirective.scss\n\n**Simple directive without an html file**\n\nExample:\n```bash\nyo angular-fullstack:directive simple\n[?] Where would you like to create this directive? client/app/\n[?] Does this directive need an external html file? No\n```\n\nProduces:\n\n    client/app/simple/simple.directive.js\n    client/app/simple/simple.directive.spec.js\n\n### Filter\nGenerates a filter.\n\nExample:\n```bash\nyo angular-fullstack:filter myFilter\n[?] Where would you like to create this filter? client/app/\n```\n\nProduces:\n\n    client/app/myFilter/myFilter.filter.js\n    client/app/myFilter/myFilter.filter.spec.js\n\n### Service\nGenerates an AngularJS service.\n\nExample:\n```bash\nyo angular-fullstack:service myService\n[?] Where would you like to create this service? client/app/\n```\n\nProduces:\n\n    client/app/myService/myService.service.js\n    client/app/myService/myService.service.spec.js\n\n\nYou can also do `yo angular-fullstack:factory` and `yo angular-fullstack:provider` for other types of services.\n\n### Decorator\nGenerates an AngularJS service decorator.\n\nExample:\n```bash\nyo angular-fullstack:decorator serviceName\n[?] Where would you like to create this decorator? client/app/\n```\n\nProduces\n\n    client/app/serviceName/serviceName.decorator.js\n\n###Openshift\n\nDeploying to OpenShift can be done in just a few steps:\n\n    yo angular-fullstack:openshift\n\nA live application URL will be available in the output.\n\n> **oAuth**\n>\n> If you're using any oAuth strategies, you must set environment variables for your selected oAuth. For example, if we're using Facebook oAuth we would do this :\n>\n>     rhc set-env FACEBOOK_ID=id -a my-openshift-app\n>     rhc set-env FACEBOOK_SECRET=secret -a my-openshift-app\n>\n> You will also need to set `DOMAIN` environment variable:\n>\n>     rhc set-env DOMAIN=<your-openshift-app-name>.rhcloud.com\n>\n>     # or (if you're using it):\n>\n>     rhc set-env DOMAIN=<your-custom-domain>\n>\n> After you've set the required environment variables, restart the server:\n>\n>     rhc app-restart -a my-openshift-app\n\nTo make your deployment process easier consider using [grunt-build-control](https://github.com/robwierzbowski/grunt-build-control).\n\n**Pushing Updates**\n\n    grunt\n\nCommit and push the resulting build, located in your dist folder:\n\n    grunt buildcontrol:openshift\n\n### Heroku\n\nDeploying to heroku only takes a few steps.\n\n    yo angular-fullstack:heroku\n\nTo work with your new heroku app using the command line, you will need to run any `heroku` commands from the `dist` folder.\n\n\nIf you're using mongoDB you will need to add a database to your app:\n\n    heroku addons:create mongolab\n\nYour app should now be live. To view it run `heroku open`.\n\n>\n> If you're using any oAuth strategies, you must set environment variables for your selected oAuth. For example, if we're using **Facebook** oAuth we would do this :\n>\n>     heroku config:set FACEBOOK_ID=id\n>     heroku config:set FACEBOOK_SECRET=secret\n>\n> You will also need to set `DOMAIN` environment variable:\n>\n>     heroku config:set DOMAIN=<your-heroku-app-name>.herokuapp.com\n>\n>     # or (if you're using it):\n>\n>     heroku config:set DOMAIN=<your-custom-domain>\n>\n\nTo make your deployment process easier consider using [grunt-build-control](https://github.com/robwierzbowski/grunt-build-control).\n\n#### Pushing Updates\n\n    grunt\n\nCommit and push the resulting build, located in your dist folder:\n\n    grunt buildcontrol:heroku\n\n\n## Bower Components\n\nThe following packages are always installed by the [app](#app) generator:\n\n* angular\n* angular-cookies\n* angular-mocks\n* angular-resource\n* angular-sanitize\n* es5-shim\n* font-awesome\n* json3\n* jquery\n* lodash\n\nThese packages are installed optionally depending on your configuration:\n\n* angular-route\n* angular-ui-router\n* angular-socket-io\n* angular-bootstrap\n* bootstrap\n\nAll of these can be updated with `bower update` as new versions are released.\n\n## Configuration\nYeoman generated projects can be further tweaked according to your needs by modifying project files appropriately.\n\nA `.yo-rc` file is generated for helping you copy configuration across projects, and to allow you to keep track of your settings. You can change this as you see fit.\n\n## Testing\n\nRunning `grunt test` will run the client and server unit tests with karma and mocha.\n\nUse `grunt test:server` to only run server tests.\n\nUse `grunt test:client` to only run client tests.\n\n**Protractor tests**\n\nTo setup protractor e2e tests, you must first run\n\n`npm run update-webdriver`\n\nUse `grunt test:e2e` to have protractor go through tests located in the `e2e` folder.\n\n**Code Coverage**\n\nUse `grunt test:coverage` to run mocha-istanbul and generate code coverage reports.\n\n`coverage/server` will be populated with `e2e` and `unit` folders containing the `lcov` reports.\n\nThe coverage taget has 3 available options:\n- `test:coverage:unit` generate server unit test coverage\n- `test:coverage:e2e` generate server e2e test coverage\n- `test:coverage:check` combine the coverage reports and check against predefined thresholds\n\n* *when no option is given `test:coverage` runs all options in the above order*\n\n## Environment Variables\n\nKeeping your app secrets and other sensitive information in source control isn't a good idea. To have grunt launch your app with specific environment variables, add them to the git ignored environment config file: `server/config/local.env.js`.\n\n## Project Structure\n\nOverview\n\n    ├── client\n    │   ├── app                 - All of our app specific components go in here\n    │   ├── assets              - Custom assets: fonts, images, etc…\n    │   ├── components          - Our reusable components, non-specific to to our app\n    │\n    ├── e2e                     - Our protractor end to end tests\n    │\n    └── server\n        ├── api                 - Our apps server api\n        ├── auth                - For handling authentication with different auth strategies\n        ├── components          - Our reusable or app-wide components\n        ├── config              - Where we do the bulk of our apps configuration\n        │   └── local.env.js    - Keep our environment variables out of source control\n        │   └── environment     - Configuration specific to the node environment\n        └── views               - Server rendered views\n\nAn example client component in `client/app`\n\n    main\n    ├── main.js                 - Routes\n    ├── main.controller.js      - Controller for our main route\n    ├── main.controller.spec.js - Test\n    ├── main.html               - View\n    └── main.less               - Styles\n\nAn example server component in `server/api`\n\n    thing\n    ├── index.js                - Routes\n    ├── thing.controller.js     - Controller for our `thing` endpoint\n    ├── thing.model.js          - Database model\n    ├── thing.socket.js         - Register socket events\n    └── thing.spec.js           - Test\n\n## Contribute\n\nSee the [contributing docs](https://github.com/DaftMonk/generator-angular-fullstack/blob/master/contributing.md)\n\nThis project has 2 main branches: `master` and `canary`. The `master` branch is where the current stable code lives and should be used for production setups. The `canary` branch is the main development branch, this is where PRs should be submitted to (backport fixes may be applied to `master`).\n\nBy seperating the current stable code from the cutting-edge development we hope to provide a stable and efficient workflow for users and developers alike.\n\nWhen submitting an issue, please follow the [guidelines](https://github.com/yeoman/yeoman/blob/master/contributing.md#issue-submission). Especially important is to make sure Yeoman is up-to-date, and providing the command or commands that cause the issue.\n\nWhen submitting a PR, make sure that the commit messages match the [AngularJS conventions](https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/).\n\nWhen submitting a bugfix, try to write a test that exposes the bug and fails before applying your fix. Submit the test alongside the fix.\n\nWhen submitting a new feature, add tests that cover the feature.\n\nSee the `travis.yml` for configuration required to run tests.\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php)\n",
  "readmeFilename": "readme.md",
  "_id": "generator-angular-fullstack@3.0.0-rc7-patch.0",
  "_shasum": "4d663ecee38889394d963f4bab12e2b85d4ed7a1",
  "_from": "generator-angular-fullstack@*",
  "_resolved": "https://registry.npmjs.org/generator-angular-fullstack/-/generator-angular-fullstack-3.0.0-rc7-patch.0.tgz"
}
